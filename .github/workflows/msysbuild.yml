name: MSYS-Build

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  # ... commented for now ...
  #push:
  #  branches: [ master ]
  #pull_request:
  #  branches: [ master ]

  # Runs this workflow manually from the Actions tab
  workflow_dispatch:

jobs:

  build-linux-qt:

    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout Tone Tyrant
        uses: actions/checkout@v2
        with:
          path: tonetyrant
          submodules: 'true'

      - name: Checkout WX
        uses: actions/checkout@v2
        with:
          repository: WxWidgets/WxWidgets
          ref: v3.2.0
          path: wxWidgets
          submodules: 'true'

      - name: Checkout RtMidi
        uses: actions/checkout@v2
        with:
          repository: thestk/rtmidi
          ref: 5.0.0
          path: RtMidi
          submodules: 'false'

      - name: Cache WX
        id: cache-wx
        uses: actions/cache@v3
        with:
          path: wx-build-3.2-qt
          key: wx-3.2-build-qt-${{ runner.os }}-static-${{ hashFiles('wx-build-3.2-qt/config.log') }}
          restore-keys: |
            wx-3.2-build-qt-${{ runner.os }}-static-
      
      - name: Get dependencies QT
        run: |
          sudo apt-get install -y build-essential qt5-default
      
      # Builds WX static library. This is a long action! >30 minutes! Cache if possible
      - name: Build WX if no Cache
        if: steps.cache-wx.outputs.cache-hit != 'true'
        run: |
          mkdir wx-build-3.2-qt
          cd wx-build-3.2-qt
          ../wxWidgets/configure --without-expat --without-libtiff --disable-shared --with-qt
          make all

      # For fun :)
      - name: Build Sample
        id: build-sample
        if: 'true'
        run: |
          ls -lR wx-build-3.2-qt
          cd wx-build-3.2-qt/samples/docview
          make all

      # Build our program
      - name: Build Tyrant
        id: build-tyrant
        continue-on-error: true
        run: |
          sudo apt-get install -y libasound2-dev
          cd tonetyrant/src-cpp
          make all -f Makefile.unx wx_top_builddir=../../wx-build-3.2-qt top_srcdir=../../wxWidgets rtmidi_srcdir=../../RtMidi

      # Upload the two artifacts
      - uses: actions/upload-artifact@v2
        if: steps.build-tyrant.outcome == 'success'
        with:
          name: tyrant-${{ runner.os }}-qt-executable-artifact
          path: tonetyrant/src-cpp/tyrant
      - uses: actions/upload-artifact@v2
        if: steps.cache-wx.outputs.cache-hit != 'true' && steps.build-sample.outcome == 'success'
        with:
          name: docview-${{ runner.os }}-gtk2-executable-artifact
          path: wx-build-3.2-qt/samples/docview/docview



  release-all:
    runs-on: ubuntu-latest
    needs: [ build-linux-qt ]
    steps:
      - run: |
          echo "${{ github.ref_name }}"
      - uses: actions/download-artifact@v3
        with:
          name: tyrant-Windows-32bit-executable-artifact
          path: windows-all-versions-32bit-executable-${{ github.ref_name }}
      - uses: actions/download-artifact@v3
        with:
          name: tyrant-Windows-64bit-executable-artifact
          path: windows-all-versions-64bit-executable-${{ github.ref_name }}
      - uses: actions/download-artifact@v3
        with:
          name: tyrant-Linux-gtk2-executable-artifact
          path: linux-gtk2-executable-${{ github.ref_name }}
      - run: |
          ls -lR
          mv windows-all-versions-32bit-executable-${{ github.ref_name }}/tyrant*.* ./tyrant32.exe
          mv windows-all-versions-64bit-executable-${{ github.ref_name }}/tyrant*.* ./tyrant.exe
          mv linux-gtk2-executable-${{ github.ref_name }}/tyrant* ./tyrant
          chmod +x ./tyrant
          ls -l
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            tyrant*
