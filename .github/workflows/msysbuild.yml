name: MSYS-Build

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  # ... commented for now ...
  #push:
  #  branches: [ master ]
  #pull_request:
  #  branches: [ master ]

  # Runs this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build-windows:

    runs-on: windows-latest
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

      # We'll use the MSYS shell
      - name: Set up MSYS
        uses: msys2/setup-msys2@v2
        with:
          msystem: mingw64
    
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout Tone Tyrant
        uses: actions/checkout@v2
        with:
          path: tonetyrant

      - name: Checkout WX
        uses: actions/checkout@v2
        with:
          repository: WxWidgets/WxWidgets
          ref: v3.1.6
          path: wxWidgets
          submodules: 'true'

      - name: Checkout RtMidi
        uses: actions/checkout@v2
        with:
          repository: thestk/rtmidi
          ref: 5.0.0
          path: RtMidi
          submodules: 'false'

      - name: Cache WX
        id: cache-wx
        uses: actions/cache@v3
        with:
          path: wx-build/lib
          key: wx-3.1-build-lib-${{ runner.os }}-${{ hashFiles('wx-build/wx-config') }}
          restore-keys: |
            wx-3.1-build-lib-${{ runner.os }}-

      # This must be done as a separate step from the next one
      - name: Setup MSYS
        shell: msys2 {0}
        run: pacman --noconfirm -S base-devel mingw-w64-x86_64-gcc
    
      # Builds WX static library. This is a long action! >30 minutes! Cache if possible
      - name: Build WX
        shell: msys2 {0}
        run: |
          mkdir wx-build
          cd wx-build
          ../wxWidgets/configure --without-expat --without-libtiff --disable-shared --with-msw
      
      # For fun :)
      - name: Build Sample
        id: build-sample
        shell: msys2 {0}
        run: |
          cd wx-build/samples/docview
          make all LDFLAGS="-static"

      # Build our program
      - name: Build Tyrant
        id: build-tyrant
        continue-on-error: true
        shell: msys2 {0}
        run: |
          cd tonetyrant/src-cpp
          make all -f Makefile.windows wx_top_builddir=../../wx-build top_srcdir=../../wxWidgets rtmidi_srcdir=../../RtMidi LDFLAGS="-static"

      # Upload the two artifacts
      - uses: actions/upload-artifact@v2
        if: steps.build-tyrant.outcome == 'success'
        with:
          name: tyrant-windows-executable-artifact
          path: tonetyrant/src-cpp/*.exe
      - uses: actions/upload-artifact@v2
        if: steps.build-sample.outcome == 'success'
        with:
          name: docview-windows-executable-artifact
          path: wx-build/samples/docview/*.exe
