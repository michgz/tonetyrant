# =========================================================================
#     This makefile was generated by
#     Bakefile 0.2.12 (http://www.bakefile.org)
#     Do not modify, all changes will be overwritten!
# =========================================================================


# Change this!!
wx_top_builddir ?= $(HOME)/Downloads/wxWidgets-3.1.6/buildgtk

# Change this!!
rtmidi_srcdir ?= $(HOME)/Downloads/rtmidi-5.0.0


# -------------------------------------------------------------------------
# These are configurable options:
# -------------------------------------------------------------------------

# C++ compiler 
CXX = `$(WX_CONFIG) --cxx`

# Standard flags for C++ 
CXXFLAGS ?= 

# Standard preprocessor flags (common for CC and CXX) 
CPPFLAGS ?= 

# Standard linker flags 
LDFLAGS ?= 

# Location and arguments of wx-config script 
WX_CONFIG ?= ${wx_top_builddir}/wx-config

# Port of the wx library to build against [gtk1,gtk2,msw,x11,motif,osx_cocoa,osx_carbon,dfb]
WX_PORT ?= $(shell $(WX_CONFIG) --query-toolkit)

# Use DLL build of wx library to use? [0,1]
WX_SHARED ?= $(shell if test -z `$(WX_CONFIG) --query-linkage`; then echo 1; else echo 0; fi)

# Compile Unicode build of wxWidgets? [0,1]
WX_UNICODE ?= $(shell $(WX_CONFIG) --query-chartype | sed 's/unicode/1/;s/ansi/0/')

# Version of the wx library to build against. 
WX_VERSION ?= $(shell $(WX_CONFIG) --query-version | sed -e 's/\([0-9]*\)\.\([0-9]*\)/\1\2/')


EXTRALIBS_FOR_RTMIDI = -lasound -lpthread


# -------------------------------------------------------------------------
# Do not modify the rest of this file!
# -------------------------------------------------------------------------

### Variables: ###

CPPDEPS = -MT$@ -MF`echo $@ | sed -e 's,\.o$$,.d,'` -MD -MP
WX_VERSION_MAJOR = $(shell echo $(WX_VERSION) | cut -c1,1)
WX_VERSION_MINOR = $(shell echo $(WX_VERSION) | cut -c2,2)
WX_CONFIG_FLAGS = $(WX_CONFIG_UNICODE_FLAG) $(WX_CONFIG_SHARED_FLAG) \
	--toolkit=$(WX_PORT) --version=$(WX_VERSION_MAJOR).$(WX_VERSION_MINOR)
TONETYRANT_CXXFLAGS = -I. `$(WX_CONFIG) --cxxflags $(WX_CONFIG_FLAGS)` $(CPPFLAGS) \
	$(CXXFLAGS)
TONETYRANT_OBJECTS =  \
	tonetyrant_tyrant.o \
	tonetyrant_doc.o \
	tonetyrant_view.o \
	tonetyrant_hintview.o \
	tonetyrant_midicomms.o
EXEEXT = 
OBJS = .
srcdir = .

### Conditionally set variables: ###

ifeq ($(WX_UNICODE),0)
WX_CONFIG_UNICODE_FLAG = --unicode=no
endif
ifeq ($(WX_UNICODE),1)
WX_CONFIG_UNICODE_FLAG = --unicode=yes
endif
ifeq ($(WX_SHARED),0)
WX_CONFIG_SHARED_FLAG = --static=yes
endif
ifeq ($(WX_SHARED),1)
WX_CONFIG_SHARED_FLAG = --static=no
endif


### Targets: ###

all: tyrant$(EXEEXT)

install: 

uninstall: 

clean: 
	rm -f ./*.o
	rm -f ./*.d
	rm -f tyrant$(EXEEXT)

tyrant$(EXEEXT): $(TONETYRANT_OBJECTS) $(OBJS)/rtmidi.o $(OBJS)/Crc32.o
	$(CXX) -o $@ $(TONETYRANT_OBJECTS) $(OBJS)/rtmidi.o $(OBJS)/Crc32.o $(LDFLAGS) `$(WX_CONFIG) $(WX_CONFIG_FLAGS) --libs aui,core,base` $(EXTRALIBS_FOR_RTMIDI)

tonetyrant_tyrant.o: $(srcdir)/tyrant.cpp
	$(CXXC) -c -o $@ $(TONETYRANT_CXXFLAGS) $(CPPDEPS) $< -I${rtmidi_srcdir}

tonetyrant_doc.o: $(srcdir)/doc.cpp
	$(CXXC) -c -o $@ $(TONETYRANT_CXXFLAGS) $(CPPDEPS) $<

tonetyrant_view.o: $(srcdir)/view.cpp
	$(CXXC) -c -o $@ $(TONETYRANT_CXXFLAGS) $(CPPDEPS) $<

tonetyrant_hintview.o: $(srcdir)/hintview.cpp
	$(CXXC) -c -o $@ $(TONETYRANT_CXXFLAGS) $(CPPDEPS) $<

tonetyrant_midicomms.o: $(srcdir)/midi_comms.cpp
	$(CXXC) -c -o $@ $(TONETYRANT_CXXFLAGS) $(CPPDEPS) $<

$(OBJS)/rtmidi.o: ${rtmidi_srcdir}/RtMidi.cpp
	g++ -c -Wall -D__LINUX_ALSA__ -o $@ ${rtmidi_srcdir}/RtMidi.cpp -I${rtmidi_srcdir}

FLAGS_CRC32     = -O3 -Wall -Wextra -pedantic -s

$(OBJS)/Crc32.o : crc32/Crc32.cpp crc32/Crc32.h
	g++ $(FLAGS_CRC32) -I./crc32 -c crc32/Crc32.cpp -o $@

.PHONY: all clean


# Dependencies tracking:
-include ./*.d
